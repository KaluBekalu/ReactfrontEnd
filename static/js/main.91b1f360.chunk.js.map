{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","react_router_dom","href","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","toggle","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","color","float","Contacts","deleteContact","newContactList","con","Fragment","map","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","prototype","PropTypes","string","isRequired","func","AddContacts","errors","e","defineProperty","target","onsubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","NotFound","App","Context_Provider","layout_Header","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.91b1f360.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n\tconst { branding } = props\r\n\treturn (\r\n\t\t<nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Link href='/' className='navbar-brand'>\r\n\t\t\t\t\t{branding}\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className='navbar-nav mr-auto'>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<Link to='/' className='nav-link mr-auto'>\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<Link to='/contact/add' className='nav-link mr-auto'>\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<Link to='/about' className='nav-link mr-auto'>\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\nHeader.defaultProps = {\r\n\tbranding: 'Contact Manager App'\r\n}\r\n\r\nHeader.propTypes = {\r\n\tbranding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='display-4'>About Contact Manager</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Minima, modi\r\n\t\t\t\ttotam ex dolorum molestias adipisci nisi nemo alias doloremque commodi\r\n\t\t\t\tquia necessitatibus earum impedit, omnis autem voluptatibus inventore?\r\n\t\t\t\tMinus, pariatur?\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext()\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.filter(\r\n\t\t\t\t\tcontact => contact.id !== action.payload\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\tcase 'ADD_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [action.payload, ...state.contacts]\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport class Provider extends Component {\r\n\tstate = {\r\n\t\tcontacts: [],\r\n\t\tdispatch: action => {\r\n\t\t\tthis.setState(state => reducer(state, action))\r\n\t\t}\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tconst res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\t\tthis.setState({ contacts: res.data })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Context.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../Context'\r\nimport axios from 'axios'\r\nclass Contact extends Component {\r\n\tstate = {\r\n\t\tshowContactInfo: false\r\n\t}\r\n\ttoggle = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowContactInfo: !this.state.showContactInfo\r\n\t\t})\r\n\t}\r\n\tonDeleteClick = async (id, dispatch) => {\r\n\t\tawait axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\t\tdispatch({ type: 'DELETE_CONTACT', payload: id })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { name, email, phone, id } = this.props.contact\r\n\t\tconst { showContactInfo } = this.state\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { dispatch } = value\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='card card-body mb-3'>\r\n\t\t\t\t\t\t\t<h4 className='card-header'>\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tonClick={this.toggle}\r\n\t\t\t\t\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t-^-\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\tonClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer', color: 'red', float: 'right' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tx\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t{showContactInfo ? (\r\n\t\t\t\t\t\t\t\t<ul className='list-group'>\r\n\t\t\t\t\t\t\t\t\t<li className='list-group-item'>Email: {email}</li>\r\n\t\t\t\t\t\t\t\t\t<li className='list-group-item'>Phone: {phone}</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nContact.propTypes = {\r\n\tcontact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../Context'\r\n\r\nclass Contacts extends Component {\r\n\tdeleteContact = id => {\r\n\t\tconst { contacts } = this.state\r\n\t\tconst newContactList = contacts.filter(con => con.id !== id)\r\n\t\tthis.setState({\r\n\t\t\tcontacts: newContactList\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { contacts } = value\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<h1 className='display-4 mb-4'>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<span className='text-danger'> Contact </span>List\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t{contacts.map(contact => (\r\n\t\t\t\t\t\t\t\t<Contact key={contact.id} contact={contact} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// input field component\r\nconst TextInputGroup = ({\r\n\tlabel,\r\n\tname,\r\n\tvalue,\r\n\tplaceholder,\r\n\ttype,\r\n\tonChange,\r\n\terror\r\n}) => {\r\n\treturn (\r\n\t\t<div className='form-group p-2'>\r\n\t\t\t<label htmlFor={name} className='lead'>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t'is-invalid': error\r\n\t\t\t\t})}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t{error && <div className='invalid-feedback'>{error}</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nTextInputGroup.prototype = {\r\n\tname: PropTypes.string.isRequired,\r\n\tplaceholder: PropTypes.string.isRequired,\r\n\tvalue: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\terror: PropTypes.string\r\n}\r\n\r\n// default value for the input field type if not provided\r\nTextInputGroup.defaultProps = {\r\n\ttype: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContacts extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {} //store errors if any\r\n\t}\r\n\r\n\t// listens to keyboard inputs and updates the state along with it\r\n\tonChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tonsubmit = async (dispatch, e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { name, email, phone } = this.state\r\n\r\n\t\t// Check for the Errors (Empty fields)\r\n\t\tif (name === '') {\r\n\t\t\tthis.setState({ errors: { name: 'Name is Required' } })\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (email === '') {\r\n\t\t\tthis.setState({ errors: { email: 'Email is Required' } })\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (phone === '') {\r\n\t\t\tthis.setState({ errors: { phone: 'Phone is Required' } })\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst newContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t}\r\n\r\n\t\tconst res = await axios.post(\r\n\t\t\t'https://jsonplaceholder.typicode.com/users',\r\n\t\t\tnewContact\r\n\t\t)\r\n\t\tdispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n\t\t// Redirecting\r\n\t\tthis.props.history.push('/')\r\n\r\n\t\t// clear the input fields\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: {}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Destructure  the state\r\n\t\tconst { name, email, phone, errors } = this.state\r\n\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { dispatch } = value\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='card mb-5'>\r\n\t\t\t\t\t\t\t<h3 className='card-header'>Add Contacts</h3>\r\n\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t<form onSubmit={this.onsubmit.bind(this, dispatch)}>\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Name...'\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t\t\t\t></TextInputGroup>\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter email...'\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t\t\t\t></TextInputGroup>\r\n\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter phone...'\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t\t\t\t></TextInputGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block btn-primary btn-lg'\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddContacts\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='display-4'>\r\n\t\t\t\t<span className=' text-danger'>404 </span>Page not found\r\n\t\t\t</h1>\r\n\t\t\t<p className='lead'>Sorry That page not found</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Header from './components/layout/Header'\r\nimport About from './components/pages/About'\r\nimport Contacts from './components/contacts/Contacts'\r\nimport AddContacts from './components/contacts/AddContacts'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Provider } from './Context'\r\nimport NotFound from './components/pages/NotFound'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Provider className='App'>\r\n\t\t\t<Router>\r\n\t\t\t\t<Header branding='Contact Manager' />\r\n\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Contacts} />\r\n\t\t\t\t\t\t<Route exact path='/about' component={About} />\r\n\t\t\t\t\t\t<Route exact path='/contact/add' component={AddContacts} />\r\n\t\t\t\t\t\t<Route component={NotFound} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</Provider>\r\n\t)\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}